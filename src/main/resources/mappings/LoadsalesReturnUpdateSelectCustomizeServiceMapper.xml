<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  automatically generated LoadsalesReturnUpdateSelectCustomizeService Mapper xml
-->
<mapper namespace="com.dogfood.aa20240808.repository.LoadsalesReturnUpdateSelectCustomizeServiceMapper">

<resultMap id="defaultDSAnonymousStructure_0C942FA717268536916F444E2B135D0C" type="com.dogfood.aa20240808.domain.structure.anonymous.AnonymousStructure_0C942FA717268536916F444E2B135D0C">
    <result column="material_code" property="materialCode"/>
    <result column="outbound_quantity" property="outboundQuantity"/>
    <result column="total" property="total"/>
</resultMap>

<select id="getSql1" resultMap="defaultDSAnonymousStructure_0C942FA717268536916F444E2B135D0C">
SELECT `sod`.`material_code`,`sod`.`outbound_quantity`,SUM( `sod`.`return_quan_tity`) `total` from `sales_orders` `so` LEFT JOIN `sales_order_details` `sod` ON `so`.`order_number` = `sod`.`sales_order_number` 
<if test=" orderNumber!=null ">
	
<trim prefix = "WHERE" prefixOverrides = "and |or">
	`so`.`source_number` = #{orderNumber}
</trim>
</if> GROUP BY `sod`.`material_code`
</select>

<resultMap id="AnonymousStructure_C807E715FC032F8BE6027971BB14D4D0" type="com.dogfood.aa20240808.domain.structure.anonymous.AnonymousStructure_C807E715FC032F8BE6027971BB14D4D0">
    <id column="T1_C1" property="salesOrderDetails.id"/>
    <result column="T1_C2" property="salesOrderDetails.materialCode"/>
    <result column="T1_C3" property="salesOrderDetails.quantity"/>
    <result column="T1_C4" property="salesOrderDetails.unitPrice"/>
    <result column="T1_C5" property="salesOrderDetails.deliveryDate"/>
    <result column="T1_C6" property="salesOrderDetails.notes"/>
    <result column="T1_C7" property="salesOrderDetails.salesOrderNumber"/>
    <result column="T1_C8" property="salesOrderDetails.warehouse"/>
    <result column="T1_C9" property="salesOrderDetails.quantityShipped"/>
    <result column="T1_C10" property="salesOrderDetails.salesOrderDetailsId"/>
    <result column="T1_C11" property="salesOrderDetails.batchNumber"/>
    <result column="T1_C12" property="salesOrderDetails.outboundQuantity"/>
    <result column="T1_C13" property="salesOrderDetails.returnQuanTity"/>
    <result column="T1_C14" property="salesOrderDetails.availableQuantity"/>
    <result column="T2_C1" property="materialDetails.materialCode"/>
    <result column="T2_C2" property="materialDetails.material_name"/>
    <result column="T2_C3" property="materialDetails.category_id"/>
    <result column="T2_C4" property="materialDetails.specification"/>
    <result column="T2_C5" property="materialDetails.unit"/>
    <result column="T2_C6" property="materialDetails.description"/>
    <result column="T2_C7" property="materialDetails.is_batch_enabled"/>
</resultMap>

<select id="getAnonymousStructure_C807E715FC032F8BE6027971BB14D4D0" resultMap="AnonymousStructure_C807E715FC032F8BE6027971BB14D4D0">
SELECT `sales_order_details`.`id` `T1_C1`,`sales_order_details`.`material_code` `T1_C2`,`sales_order_details`.`quantity` `T1_C3`,`sales_order_details`.`unit_price` `T1_C4`,`sales_order_details`.`delivery_date` `T1_C5`,`sales_order_details`.`notes` `T1_C6`,`sales_order_details`.`sales_order_number` `T1_C7`,`sales_order_details`.`warehouse` `T1_C8`,`sales_order_details`.`quantity_shipped` `T1_C9`,`sales_order_details`.`sales_order_details_id` `T1_C10`,`sales_order_details`.`batch_number` `T1_C11`,`sales_order_details`.`outbound_quantity` `T1_C12`,`sales_order_details`.`return_quan_tity` `T1_C13`,`sales_order_details`.`available_quantity` `T1_C14`,`material_details`.`material_code` `T2_C1`,`material_details`.`material_name` `T2_C2`,`material_details`.`category_id` `T2_C3`,`material_details`.`specification` `T2_C4`,`material_details`.`unit` `T2_C5`,`material_details`.`description` `T2_C6`,`material_details`.`is_batch_enabled` `T2_C7` FROM `sales_order_details` INNER JOIN `material_details` ON `sales_order_details`.`material_code` = `material_details`.`material_code` 
<if test=" 1==1 or ( ListMaterialDetailsCode!=null and ListMaterialDetailsCode.size()>0 ) or orderNumber!=null ">

<trim  prefix="WHERE" prefixOverrides="and |or">

<if test=" 1==1 and orderNumber!=null ">

<trim  prefix="(" suffix=")" prefixOverrides="and |or">
`sales_order_details`.`sales_order_number` = #{orderNumber} 
</trim> 
</if> 
<if test=" 1==1 and ( ListMaterialDetailsCode!=null and ListMaterialDetailsCode.size()>0 ) ">

<trim  prefix="and">

<trim  prefix="(" suffix=")" prefixOverrides="and |or">
( NOT ( ( `material_details`.`material_code` IN 
<foreach item="item" index="index" collection="ListMaterialDetailsCode" open="(" separator="," close=")">
#{item} 
</foreach> ) ) ) 
</trim> 
</trim> 
</if> 
</trim> 
</if> 
<if test=" 1==1 and lcap_71860C77_page!=null and lcap_F7BD60B7_size!=null ">
 LIMIT ${( lcap_F7BD60B7_size * ( lcap_71860C77_page - 1 ) )}, ${lcap_F7BD60B7_size} 
</if>
</select>

<select id="countAnonymousStructure_C807E715FC032F8BE6027971BB14D4D0" resultType="java.lang.Long">
SELECT COUNT(*) FROM `sales_order_details` INNER JOIN `material_details` ON `sales_order_details`.`material_code` = `material_details`.`material_code` 
<if test=" 1==1 or ( ListMaterialDetailsCode!=null and ListMaterialDetailsCode.size()>0 ) or orderNumber!=null ">

<trim  prefix="WHERE" prefixOverrides="and |or">

<if test=" 1==1 and orderNumber!=null ">

<trim  prefix="(" suffix=")" prefixOverrides="and |or">
`sales_order_details`.`sales_order_number` = #{orderNumber} 
</trim> 
</if> 
<if test=" 1==1 and ( ListMaterialDetailsCode!=null and ListMaterialDetailsCode.size()>0 ) ">

<trim  prefix="and">

<trim  prefix="(" suffix=")" prefixOverrides="and |or">
( NOT ( ( `material_details`.`material_code` IN 
<foreach item="item" index="index" collection="ListMaterialDetailsCode" open="(" separator="," close=")">
#{item} 
</foreach> ) ) ) 
</trim> 
</trim> 
</if> 
</trim> 
</if>
</select>
</mapper>